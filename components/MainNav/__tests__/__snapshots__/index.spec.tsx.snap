// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MainNav should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MainNav />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ForwardRef>
        <h1
          data-align={true}
        >
          <Link
            href="/"
          >
            <a
              data-align={true}
            >
              <img
                alt="GitShareCode"
                src="/static/logo.png"
              />
            </a>
          </Link>
        </h1>
        <ForwardRef
          mode="horizontal"
        >
          <MenuItem>
            <Link
              href="/contributors"
            >
              <a>
                Contributors
              </a>
            </Link>
          </MenuItem>
          <MenuItem>
            <Link
              href="/features"
            >
              <a>
                Features
              </a>
            </Link>
          </MenuItem>
        </ForwardRef>
        <ForwardRef>
          <Link
            href="/extension"
          >
            <a
              data-align={true}
            >
              <ForwardRef
                icon="chrome"
              >
                Add to Chrome
              </ForwardRef>
            </a>
          </Link>
          <a
            data-align={true}
            href="https://github.com/kosslab-kr/gitCodeShare.com/stargazers"
            target="blank"
          >
            <ForwardRef
              data-violet={true}
              icon="github"
            >
              Star
            </ForwardRef>
            <ForwardRef
              count={0}
              data-violet={true}
            />
          </a>
          <a
            data-align={true}
            href="https://github.com/kosslab-kr/gitCodeShare.com/network/members"
            target="blank"
          >
            <ForwardRef
              data-magenta={true}
              icon="github"
            >
              Fork
            </ForwardRef>
            <ForwardRef
              count={0}
              data-magenta={true}
            />
          </a>
        </ForwardRef>
      </ForwardRef>,
      "className": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <h1
            data-align={true}
          >
            <Link
              href="/"
            >
              <a
                data-align={true}
              >
                <img
                  alt="GitShareCode"
                  src="/static/logo.png"
                />
              </a>
            </Link>
          </h1>,
          <ForwardRef
            mode="horizontal"
          >
            <MenuItem>
              <Link
                href="/contributors"
              >
                <a>
                  Contributors
                </a>
              </Link>
            </MenuItem>
            <MenuItem>
              <Link
                href="/features"
              >
                <a>
                  Features
                </a>
              </Link>
            </MenuItem>
          </ForwardRef>,
          <ForwardRef>
            <Link
              href="/extension"
            >
              <a
                data-align={true}
              >
                <ForwardRef
                  icon="chrome"
                >
                  Add to Chrome
                </ForwardRef>
              </a>
            </Link>
            <a
              data-align={true}
              href="https://github.com/kosslab-kr/gitCodeShare.com/stargazers"
              target="blank"
            >
              <ForwardRef
                data-violet={true}
                icon="github"
              >
                Star
              </ForwardRef>
              <ForwardRef
                count={0}
                data-violet={true}
              />
            </a>
            <a
              data-align={true}
              href="https://github.com/kosslab-kr/gitCodeShare.com/network/members"
              target="blank"
            >
              <ForwardRef
                data-magenta={true}
                icon="github"
              >
                Fork
              </ForwardRef>
              <ForwardRef
                count={0}
                data-magenta={true}
              />
            </a>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              href="/"
            >
              <a
                data-align={true}
              >
                <img
                  alt="GitShareCode"
                  src="/static/logo.png"
                />
              </a>
            </Link>,
            "data-align": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <a
                data-align={true}
              >
                <img
                  alt="GitShareCode"
                  src="/static/logo.png"
                />
              </a>,
              "href": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="GitShareCode"
                  src="/static/logo.png"
                />,
                "data-align": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "GitShareCode",
                  "src": "/static/logo.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "a",
            },
            "type": [Function],
          },
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <MenuItem>
                <Link
                  href="/contributors"
                >
                  <a>
                    Contributors
                  </a>
                </Link>
              </MenuItem>,
              <MenuItem>
                <Link
                  href="/features"
                >
                  <a>
                    Features
                  </a>
                </Link>
              </MenuItem>,
            ],
            "mode": "horizontal",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Link
                  href="/contributors"
                >
                  <a>
                    Contributors
                  </a>
                </Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <a>
                    Contributors
                  </a>,
                  "href": "/contributors",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Contributors",
                  },
                  "ref": null,
                  "rendered": "Contributors",
                  "type": "a",
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Link
                  href="/features"
                >
                  <a>
                    Features
                  </a>
                </Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <a>
                    Features
                  </a>,
                  "href": "/features",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Features",
                  },
                  "ref": null,
                  "rendered": "Features",
                  "type": "a",
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "Divider": [Function],
            "Item": [Function],
            "ItemGroup": [Function],
            "SubMenu": [Function],
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "StyledMenu__MainNavMenu-l7ya14-0",
              "isStatic": false,
              "rules": Array [
                "&.ant-menu{margin:0;border-bottom:none;background-color:transparent;li,li:hover,li:focus{border-bottom:none;a{color:",
                [Function],
                ";}}}",
              ],
            },
            "displayName": "StyledMenu__MainNavMenu",
            "render": [Function],
            "styledComponentId": "StyledMenu__MainNavMenu-l7ya14-0",
            "target": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Link
                href="/extension"
              >
                <a
                  data-align={true}
                >
                  <ForwardRef
                    icon="chrome"
                  >
                    Add to Chrome
                  </ForwardRef>
                </a>
              </Link>,
              <a
                data-align={true}
                href="https://github.com/kosslab-kr/gitCodeShare.com/stargazers"
                target="blank"
              >
                <ForwardRef
                  data-violet={true}
                  icon="github"
                >
                  Star
                </ForwardRef>
                <ForwardRef
                  count={0}
                  data-violet={true}
                />
              </a>,
              <a
                data-align={true}
                href="https://github.com/kosslab-kr/gitCodeShare.com/network/members"
                target="blank"
              >
                <ForwardRef
                  data-magenta={true}
                  icon="github"
                >
                  Fork
                </ForwardRef>
                <ForwardRef
                  count={0}
                  data-magenta={true}
                />
              </a>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <a
                  data-align={true}
                >
                  <ForwardRef
                    icon="chrome"
                  >
                    Add to Chrome
                  </ForwardRef>
                </a>,
                "href": "/extension",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <ForwardRef
                    icon="chrome"
                  >
                    Add to Chrome
                  </ForwardRef>,
                  "data-align": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Add to Chrome",
                    "icon": "chrome",
                  },
                  "ref": null,
                  "rendered": "Add to Chrome",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Group": [Function],
                    "__ANT_BUTTON": true,
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "StyledButton__SmDownloadButton-rhr4ab-4",
                      "isStatic": false,
                      "rules": Array [
                        "&.ant-btn{display:inline-flex;justify-content:center;align-items:center;line-height:1;background-color:transparent;color:",
                        [Function],
                        ";&:hover,&:focus,&:active{background-color:transparent;}i{display:inherit;align-items:inherit;justify-content:inherit;}}",
                        "&.ant-btn{border:none;}",
                        "&.ant-btn{i{font-size:17px;}span{font-size:11px;}}",
                      ],
                    },
                    "displayName": "StyledButton__SmDownloadButton",
                    "render": [Function],
                    "styledComponentId": "StyledButton__SmDownloadButton-rhr4ab-4",
                    "target": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
                "type": "a",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    data-violet={true}
                    icon="github"
                  >
                    Star
                  </ForwardRef>,
                  <ForwardRef
                    count={0}
                    data-violet={true}
                  />,
                ],
                "data-align": true,
                "href": "https://github.com/kosslab-kr/gitCodeShare.com/stargazers",
                "target": "blank",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Star",
                    "data-violet": true,
                    "icon": "github",
                  },
                  "ref": null,
                  "rendered": "Star",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Group": [Function],
                    "__ANT_BUTTON": true,
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "StyledButton__GithubButton-rhr4ab-3",
                      "isStatic": false,
                      "rules": Array [
                        "&.ant-btn{display:inline-flex;justify-content:center;align-items:center;line-height:1;background-color:transparent;color:",
                        [Function],
                        ";&:hover,&:focus,&:active{background-color:transparent;}i{display:inherit;align-items:inherit;justify-content:inherit;}}",
                        "&.ant-btn{border-radius:4px;}",
                        "&.ant-btn{padding:0 5px;margin-right:5px;border:1px solid;height:25px;i{font-size:17px;color:",
                        [Function],
                        ";}span{font-size:11px;color:",
                        [Function],
                        ";}}",
                      ],
                    },
                    "displayName": "StyledButton__GithubButton",
                    "render": [Function],
                    "styledComponentId": "StyledButton__GithubButton-rhr4ab-3",
                    "target": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "count": 0,
                    "data-violet": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "StyledBadge__GithubBadge-ntn0v4-2",
                      "isStatic": false,
                      "rules": Array [
                        "&.ant-badge{display:inline-flex;align-items:center;justify-content:center;.ant-badge-count{display:inherit;justify-content:inherit;align-items:inherit;border-radius:inherit;border-color:inherit;background-color:inherit;box-shadow:none;}}",
                        "&.ant-badge{border-radius:4px;}",
                        "&.ant-badge{.ant-badge-count{width:25px;height:25px;font-size:11px;color:",
                        [Function],
                        ";}}",
                      ],
                    },
                    "displayName": "StyledBadge__GithubBadge",
                    "render": [Function],
                    "styledComponentId": "StyledBadge__GithubBadge-ntn0v4-2",
                    "target": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
              ],
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    data-magenta={true}
                    icon="github"
                  >
                    Fork
                  </ForwardRef>,
                  <ForwardRef
                    count={0}
                    data-magenta={true}
                  />,
                ],
                "data-align": true,
                "href": "https://github.com/kosslab-kr/gitCodeShare.com/network/members",
                "target": "blank",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Fork",
                    "data-magenta": true,
                    "icon": "github",
                  },
                  "ref": null,
                  "rendered": "Fork",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Group": [Function],
                    "__ANT_BUTTON": true,
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "StyledButton__GithubButton-rhr4ab-3",
                      "isStatic": false,
                      "rules": Array [
                        "&.ant-btn{display:inline-flex;justify-content:center;align-items:center;line-height:1;background-color:transparent;color:",
                        [Function],
                        ";&:hover,&:focus,&:active{background-color:transparent;}i{display:inherit;align-items:inherit;justify-content:inherit;}}",
                        "&.ant-btn{border-radius:4px;}",
                        "&.ant-btn{padding:0 5px;margin-right:5px;border:1px solid;height:25px;i{font-size:17px;color:",
                        [Function],
                        ";}span{font-size:11px;color:",
                        [Function],
                        ";}}",
                      ],
                    },
                    "displayName": "StyledButton__GithubButton",
                    "render": [Function],
                    "styledComponentId": "StyledButton__GithubButton-rhr4ab-3",
                    "target": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "count": 0,
                    "data-magenta": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "StyledBadge__GithubBadge-ntn0v4-2",
                      "isStatic": false,
                      "rules": Array [
                        "&.ant-badge{display:inline-flex;align-items:center;justify-content:center;.ant-badge-count{display:inherit;justify-content:inherit;align-items:inherit;border-radius:inherit;border-color:inherit;background-color:inherit;box-shadow:none;}}",
                        "&.ant-badge{border-radius:4px;}",
                        "&.ant-badge{.ant-badge-count{width:25px;height:25px;font-size:11px;color:",
                        [Function],
                        ";}}",
                      ],
                    },
                    "displayName": "StyledBadge__GithubBadge",
                    "render": [Function],
                    "styledComponentId": "StyledBadge__GithubBadge-ntn0v4-2",
                    "target": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
              ],
              "type": "a",
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "MainNav__RightBox-qlslhv-2",
              "isStatic": true,
              "rules": Array [
                "margin-left:auto;display:inherit;align-items:center;",
                "&{button{margin-right:30px;}[data-align]{margin-right:15px;}}",
              ],
            },
            "displayName": "MainNav__RightBox",
            "render": [Function],
            "styledComponentId": "MainNav__RightBox-qlslhv-2",
            "target": "div",
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "MainNav__NavContainer-qlslhv-1",
          "isStatic": false,
          "rules": Array [
            "width:100%;max-width:1200px;margin:0 auto;",
            "display:inherit;align-items:center;h1,a{margin:0;}[data-align]{display:inherit;align-items:center;}[data-violet]{color:",
            [Function],
            ";&.ant-badge{background-color:",
            [Function],
            ";}}[data-magenta]{color:",
            [Function],
            ";&.ant-badge{background-color:",
            [Function],
            ";}}",
          ],
        },
        "displayName": "MainNav__NavContainer",
        "render": [Function],
        "styledComponentId": "MainNav__NavContainer-qlslhv-1",
        "target": "div",
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "MainNav__Nav-qlslhv-0",
        "isStatic": false,
        "rules": Array [
          "
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    flex-wrap: wrap;
    min-width: auto;
    width: auto;
    min-height: auto;
    height: auto;
    ;
  ",
          ";align-items:center;height:70px;background-color:",
          [Function],
          ";",
        ],
      },
      "displayName": "MainNav__Nav",
      "render": [Function],
      "styledComponentId": "MainNav__Nav-qlslhv-0",
      "target": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef>
          <h1
            data-align={true}
          >
            <Link
              href="/"
            >
              <a
                data-align={true}
              >
                <img
                  alt="GitShareCode"
                  src="/static/logo.png"
                />
              </a>
            </Link>
          </h1>
          <ForwardRef
            mode="horizontal"
          >
            <MenuItem>
              <Link
                href="/contributors"
              >
                <a>
                  Contributors
                </a>
              </Link>
            </MenuItem>
            <MenuItem>
              <Link
                href="/features"
              >
                <a>
                  Features
                </a>
              </Link>
            </MenuItem>
          </ForwardRef>
          <ForwardRef>
            <Link
              href="/extension"
            >
              <a
                data-align={true}
              >
                <ForwardRef
                  icon="chrome"
                >
                  Add to Chrome
                </ForwardRef>
              </a>
            </Link>
            <a
              data-align={true}
              href="https://github.com/kosslab-kr/gitCodeShare.com/stargazers"
              target="blank"
            >
              <ForwardRef
                data-violet={true}
                icon="github"
              >
                Star
              </ForwardRef>
              <ForwardRef
                count={0}
                data-violet={true}
              />
            </a>
            <a
              data-align={true}
              href="https://github.com/kosslab-kr/gitCodeShare.com/network/members"
              target="blank"
            >
              <ForwardRef
                data-magenta={true}
                icon="github"
              >
                Fork
              </ForwardRef>
              <ForwardRef
                count={0}
                data-magenta={true}
              />
            </a>
          </ForwardRef>
        </ForwardRef>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <h1
              data-align={true}
            >
              <Link
                href="/"
              >
                <a
                  data-align={true}
                >
                  <img
                    alt="GitShareCode"
                    src="/static/logo.png"
                  />
                </a>
              </Link>
            </h1>,
            <ForwardRef
              mode="horizontal"
            >
              <MenuItem>
                <Link
                  href="/contributors"
                >
                  <a>
                    Contributors
                  </a>
                </Link>
              </MenuItem>
              <MenuItem>
                <Link
                  href="/features"
                >
                  <a>
                    Features
                  </a>
                </Link>
              </MenuItem>
            </ForwardRef>,
            <ForwardRef>
              <Link
                href="/extension"
              >
                <a
                  data-align={true}
                >
                  <ForwardRef
                    icon="chrome"
                  >
                    Add to Chrome
                  </ForwardRef>
                </a>
              </Link>
              <a
                data-align={true}
                href="https://github.com/kosslab-kr/gitCodeShare.com/stargazers"
                target="blank"
              >
                <ForwardRef
                  data-violet={true}
                  icon="github"
                >
                  Star
                </ForwardRef>
                <ForwardRef
                  count={0}
                  data-violet={true}
                />
              </a>
              <a
                data-align={true}
                href="https://github.com/kosslab-kr/gitCodeShare.com/network/members"
                target="blank"
              >
                <ForwardRef
                  data-magenta={true}
                  icon="github"
                >
                  Fork
                </ForwardRef>
                <ForwardRef
                  count={0}
                  data-magenta={true}
                />
              </a>
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                href="/"
              >
                <a
                  data-align={true}
                >
                  <img
                    alt="GitShareCode"
                    src="/static/logo.png"
                  />
                </a>
              </Link>,
              "data-align": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <a
                  data-align={true}
                >
                  <img
                    alt="GitShareCode"
                    src="/static/logo.png"
                  />
                </a>,
                "href": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <img
                    alt="GitShareCode"
                    src="/static/logo.png"
                  />,
                  "data-align": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "GitShareCode",
                    "src": "/static/logo.png",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                "type": "a",
              },
              "type": [Function],
            },
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <MenuItem>
                  <Link
                    href="/contributors"
                  >
                    <a>
                      Contributors
                    </a>
                  </Link>
                </MenuItem>,
                <MenuItem>
                  <Link
                    href="/features"
                  >
                    <a>
                      Features
                    </a>
                  </Link>
                </MenuItem>,
              ],
              "mode": "horizontal",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Link
                    href="/contributors"
                  >
                    <a>
                      Contributors
                    </a>
                  </Link>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <a>
                      Contributors
                    </a>,
                    "href": "/contributors",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Contributors",
                    },
                    "ref": null,
                    "rendered": "Contributors",
                    "type": "a",
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Link
                    href="/features"
                  >
                    <a>
                      Features
                    </a>
                  </Link>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <a>
                      Features
                    </a>,
                    "href": "/features",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Features",
                    },
                    "ref": null,
                    "rendered": "Features",
                    "type": "a",
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "Divider": [Function],
              "Item": [Function],
              "ItemGroup": [Function],
              "SubMenu": [Function],
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "StyledMenu__MainNavMenu-l7ya14-0",
                "isStatic": false,
                "rules": Array [
                  "&.ant-menu{margin:0;border-bottom:none;background-color:transparent;li,li:hover,li:focus{border-bottom:none;a{color:",
                  [Function],
                  ";}}}",
                ],
              },
              "displayName": "StyledMenu__MainNavMenu",
              "render": [Function],
              "styledComponentId": "StyledMenu__MainNavMenu-l7ya14-0",
              "target": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Link
                  href="/extension"
                >
                  <a
                    data-align={true}
                  >
                    <ForwardRef
                      icon="chrome"
                    >
                      Add to Chrome
                    </ForwardRef>
                  </a>
                </Link>,
                <a
                  data-align={true}
                  href="https://github.com/kosslab-kr/gitCodeShare.com/stargazers"
                  target="blank"
                >
                  <ForwardRef
                    data-violet={true}
                    icon="github"
                  >
                    Star
                  </ForwardRef>
                  <ForwardRef
                    count={0}
                    data-violet={true}
                  />
                </a>,
                <a
                  data-align={true}
                  href="https://github.com/kosslab-kr/gitCodeShare.com/network/members"
                  target="blank"
                >
                  <ForwardRef
                    data-magenta={true}
                    icon="github"
                  >
                    Fork
                  </ForwardRef>
                  <ForwardRef
                    count={0}
                    data-magenta={true}
                  />
                </a>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <a
                    data-align={true}
                  >
                    <ForwardRef
                      icon="chrome"
                    >
                      Add to Chrome
                    </ForwardRef>
                  </a>,
                  "href": "/extension",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <ForwardRef
                      icon="chrome"
                    >
                      Add to Chrome
                    </ForwardRef>,
                    "data-align": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Add to Chrome",
                      "icon": "chrome",
                    },
                    "ref": null,
                    "rendered": "Add to Chrome",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Group": [Function],
                      "__ANT_BUTTON": true,
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "StyledButton__SmDownloadButton-rhr4ab-4",
                        "isStatic": false,
                        "rules": Array [
                          "&.ant-btn{display:inline-flex;justify-content:center;align-items:center;line-height:1;background-color:transparent;color:",
                          [Function],
                          ";&:hover,&:focus,&:active{background-color:transparent;}i{display:inherit;align-items:inherit;justify-content:inherit;}}",
                          "&.ant-btn{border:none;}",
                          "&.ant-btn{i{font-size:17px;}span{font-size:11px;}}",
                        ],
                      },
                      "displayName": "StyledButton__SmDownloadButton",
                      "render": [Function],
                      "styledComponentId": "StyledButton__SmDownloadButton-rhr4ab-4",
                      "target": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    },
                  },
                  "type": "a",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <ForwardRef
                      data-violet={true}
                      icon="github"
                    >
                      Star
                    </ForwardRef>,
                    <ForwardRef
                      count={0}
                      data-violet={true}
                    />,
                  ],
                  "data-align": true,
                  "href": "https://github.com/kosslab-kr/gitCodeShare.com/stargazers",
                  "target": "blank",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Star",
                      "data-violet": true,
                      "icon": "github",
                    },
                    "ref": null,
                    "rendered": "Star",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Group": [Function],
                      "__ANT_BUTTON": true,
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "StyledButton__GithubButton-rhr4ab-3",
                        "isStatic": false,
                        "rules": Array [
                          "&.ant-btn{display:inline-flex;justify-content:center;align-items:center;line-height:1;background-color:transparent;color:",
                          [Function],
                          ";&:hover,&:focus,&:active{background-color:transparent;}i{display:inherit;align-items:inherit;justify-content:inherit;}}",
                          "&.ant-btn{border-radius:4px;}",
                          "&.ant-btn{padding:0 5px;margin-right:5px;border:1px solid;height:25px;i{font-size:17px;color:",
                          [Function],
                          ";}span{font-size:11px;color:",
                          [Function],
                          ";}}",
                        ],
                      },
                      "displayName": "StyledButton__GithubButton",
                      "render": [Function],
                      "styledComponentId": "StyledButton__GithubButton-rhr4ab-3",
                      "target": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "count": 0,
                      "data-violet": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "StyledBadge__GithubBadge-ntn0v4-2",
                        "isStatic": false,
                        "rules": Array [
                          "&.ant-badge{display:inline-flex;align-items:center;justify-content:center;.ant-badge-count{display:inherit;justify-content:inherit;align-items:inherit;border-radius:inherit;border-color:inherit;background-color:inherit;box-shadow:none;}}",
                          "&.ant-badge{border-radius:4px;}",
                          "&.ant-badge{.ant-badge-count{width:25px;height:25px;font-size:11px;color:",
                          [Function],
                          ";}}",
                        ],
                      },
                      "displayName": "StyledBadge__GithubBadge",
                      "render": [Function],
                      "styledComponentId": "StyledBadge__GithubBadge-ntn0v4-2",
                      "target": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    },
                  },
                ],
                "type": "a",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <ForwardRef
                      data-magenta={true}
                      icon="github"
                    >
                      Fork
                    </ForwardRef>,
                    <ForwardRef
                      count={0}
                      data-magenta={true}
                    />,
                  ],
                  "data-align": true,
                  "href": "https://github.com/kosslab-kr/gitCodeShare.com/network/members",
                  "target": "blank",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Fork",
                      "data-magenta": true,
                      "icon": "github",
                    },
                    "ref": null,
                    "rendered": "Fork",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Group": [Function],
                      "__ANT_BUTTON": true,
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "StyledButton__GithubButton-rhr4ab-3",
                        "isStatic": false,
                        "rules": Array [
                          "&.ant-btn{display:inline-flex;justify-content:center;align-items:center;line-height:1;background-color:transparent;color:",
                          [Function],
                          ";&:hover,&:focus,&:active{background-color:transparent;}i{display:inherit;align-items:inherit;justify-content:inherit;}}",
                          "&.ant-btn{border-radius:4px;}",
                          "&.ant-btn{padding:0 5px;margin-right:5px;border:1px solid;height:25px;i{font-size:17px;color:",
                          [Function],
                          ";}span{font-size:11px;color:",
                          [Function],
                          ";}}",
                        ],
                      },
                      "displayName": "StyledButton__GithubButton",
                      "render": [Function],
                      "styledComponentId": "StyledButton__GithubButton-rhr4ab-3",
                      "target": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "count": 0,
                      "data-magenta": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "StyledBadge__GithubBadge-ntn0v4-2",
                        "isStatic": false,
                        "rules": Array [
                          "&.ant-badge{display:inline-flex;align-items:center;justify-content:center;.ant-badge-count{display:inherit;justify-content:inherit;align-items:inherit;border-radius:inherit;border-color:inherit;background-color:inherit;box-shadow:none;}}",
                          "&.ant-badge{border-radius:4px;}",
                          "&.ant-badge{.ant-badge-count{width:25px;height:25px;font-size:11px;color:",
                          [Function],
                          ";}}",
                        ],
                      },
                      "displayName": "StyledBadge__GithubBadge",
                      "render": [Function],
                      "styledComponentId": "StyledBadge__GithubBadge-ntn0v4-2",
                      "target": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    },
                  },
                ],
                "type": "a",
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "MainNav__RightBox-qlslhv-2",
                "isStatic": true,
                "rules": Array [
                  "margin-left:auto;display:inherit;align-items:center;",
                  "&{button{margin-right:30px;}[data-align]{margin-right:15px;}}",
                ],
              },
              "displayName": "MainNav__RightBox",
              "render": [Function],
              "styledComponentId": "MainNav__RightBox-qlslhv-2",
              "target": "div",
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "MainNav__NavContainer-qlslhv-1",
            "isStatic": false,
            "rules": Array [
              "width:100%;max-width:1200px;margin:0 auto;",
              "display:inherit;align-items:center;h1,a{margin:0;}[data-align]{display:inherit;align-items:center;}[data-violet]{color:",
              [Function],
              ";&.ant-badge{background-color:",
              [Function],
              ";}}[data-magenta]{color:",
              [Function],
              ";&.ant-badge{background-color:",
              [Function],
              ";}}",
            ],
          },
          "displayName": "MainNav__NavContainer",
          "render": [Function],
          "styledComponentId": "MainNav__NavContainer-qlslhv-1",
          "target": "div",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "MainNav__Nav-qlslhv-0",
          "isStatic": false,
          "rules": Array [
            "
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    flex-wrap: wrap;
    min-width: auto;
    width: auto;
    min-height: auto;
    height: auto;
    ;
  ",
            ";align-items:center;height:70px;background-color:",
            [Function],
            ";",
          ],
        },
        "displayName": "MainNav__Nav",
        "render": [Function],
        "styledComponentId": "MainNav__Nav-qlslhv-0",
        "target": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
