// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CodeViewPage should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CodeViewPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ForwardRef>
        <ForwardRef>
          <ForwardRef>
            <div>
              <h3
                data-title={true}
              >
                Input Your Code Title
              </h3>
              <p>
                Created at June 18, 2018
              </p>
            </div>
            <ForwardRef>
              <ForwardRef
                avatar={
                  <Avatar
                    prefixCls="ant-avatar"
                    shape="circle"
                    size="default"
                    src="http://placehold.it/85x85"
                  />
                }
                description="Seoul / South Korea"
                title="user name"
              />
              <ForwardRef
                icon="github"
              >
                githubID
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
          <inject-CodeEditor-with-appStore />
          <ForwardRef>
            <ForwardRef>
              Copy URL
            </ForwardRef>
            <ForwardRef>
              Visit git
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>
      </ForwardRef>,
      "className": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef>
          <ForwardRef>
            <div>
              <h3
                data-title={true}
              >
                Input Your Code Title
              </h3>
              <p>
                Created at June 18, 2018
              </p>
            </div>
            <ForwardRef>
              <ForwardRef
                avatar={
                  <Avatar
                    prefixCls="ant-avatar"
                    shape="circle"
                    size="default"
                    src="http://placehold.it/85x85"
                  />
                }
                description="Seoul / South Korea"
                title="user name"
              />
              <ForwardRef
                icon="github"
              >
                githubID
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
          <inject-CodeEditor-with-appStore />
          <ForwardRef>
            <ForwardRef>
              Copy URL
            </ForwardRef>
            <ForwardRef>
              Visit git
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef>
              <div>
                <h3
                  data-title={true}
                >
                  Input Your Code Title
                </h3>
                <p>
                  Created at June 18, 2018
                </p>
              </div>
              <ForwardRef>
                <ForwardRef
                  avatar={
                    <Avatar
                      prefixCls="ant-avatar"
                      shape="circle"
                      size="default"
                      src="http://placehold.it/85x85"
                    />
                  }
                  description="Seoul / South Korea"
                  title="user name"
                />
                <ForwardRef
                  icon="github"
                >
                  githubID
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>,
            <inject-CodeEditor-with-appStore />,
            <ForwardRef>
              <ForwardRef>
                Copy URL
              </ForwardRef>
              <ForwardRef>
                Visit git
              </ForwardRef>
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <div>
                  <h3
                    data-title={true}
                  >
                    Input Your Code Title
                  </h3>
                  <p>
                    Created at June 18, 2018
                  </p>
                </div>,
                <ForwardRef>
                  <ForwardRef
                    avatar={
                      <Avatar
                        prefixCls="ant-avatar"
                        shape="circle"
                        size="default"
                        src="http://placehold.it/85x85"
                      />
                    }
                    description="Seoul / South Korea"
                    title="user name"
                  />
                  <ForwardRef
                    icon="github"
                  >
                    githubID
                  </ForwardRef>
                </ForwardRef>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h3
                      data-title={true}
                    >
                      Input Your Code Title
                    </h3>,
                    <p>
                      Created at June 18, 2018
                    </p>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Input Your Code Title",
                      "data-title": true,
                    },
                    "ref": null,
                    "rendered": "Input Your Code Title",
                    "type": "h3",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Created at June 18, 2018",
                    },
                    "ref": null,
                    "rendered": "Created at June 18, 2018",
                    "type": "p",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <ForwardRef
                      avatar={
                        <Avatar
                          prefixCls="ant-avatar"
                          shape="circle"
                          size="default"
                          src="http://placehold.it/85x85"
                        />
                      }
                      description="Seoul / South Korea"
                      title="user name"
                    />,
                    <ForwardRef
                      icon="github"
                    >
                      githubID
                    </ForwardRef>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "avatar": <Avatar
                        prefixCls="ant-avatar"
                        shape="circle"
                        size="default"
                        src="http://placehold.it/85x85"
                      />,
                      "description": "Seoul / South Korea",
                      "title": "user name",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "StyledCard__UserCardMeta-wvdxvl-4",
                        "isStatic": false,
                        "rules": Array [
                          ".ant-card-meta-avatar{width:85px;height:85px;padding:0;margin-right:19px;.ant-avatar{width:100%;height:100%;&:before{display:inline-block;width:0;height:100%;vertical-align:middle;content:'';}}img{display:inline-block;vertical-align:middle;width:auto;max-width:100%;max-height:100%;}}.ant-card-meta-detail{padding-top:5px;& > div:not(:last-child){margin-bottom:2px;}}.ant-card-meta-title{color:",
                          [Function],
                          ";font-size:14px;line-height:21px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}.ant-card-meta-description{color:",
                          [Function],
                          ";font-size:12px;line-height:21px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}",
                        ],
                      },
                      "displayName": "StyledCard__UserCardMeta",
                      "render": [Function],
                      "styledComponentId": "StyledCard__UserCardMeta-wvdxvl-4",
                      "target": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "githubID",
                      "icon": "github",
                    },
                    "ref": null,
                    "rendered": "githubID",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Group": [Function],
                      "__ANT_BUTTON": true,
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "CodeViewPage__UserGithubButton-sc-1xro4au-4",
                        "isStatic": false,
                        "rules": Array [
                          "&.ant-btn{display:inline-flex;justify-content:center;align-items:center;line-height:1;background-color:transparent;color:",
                          [Function],
                          ";&:hover,&:focus,&:active{background-color:transparent;}i{display:inherit;align-items:inherit;justify-content:inherit;}}",
                          "&.ant-btn{border-radius:4px;}",
                          "&.ant-btn{padding:0 8px;margin-right:5px;border:1px solid;height:27px;line-height:25px;i{font-size:17px;color:",
                          [Function],
                          ";}span{font-size:14px;color:",
                          [Function],
                          ";}}",
                          "&.ant-btn{position:absolute;left:100px;bottom:8px;border:0;}",
                        ],
                      },
                      "displayName": "CodeViewPage__UserGithubButton",
                      "render": [Function],
                      "styledComponentId": "CodeViewPage__UserGithubButton-sc-1xro4au-4",
                      "target": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    },
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Grid": [Function],
                  "Meta": [Function],
                  "attrs": undefined,
                  "componentStyle": ComponentStyle {
                    "componentId": "StyledCard__UserCard-wvdxvl-3",
                    "isStatic": true,
                    "rules": Array [
                      "&.ant-card{background-color:transparent;max-width:225px;width:100%;height:85px;margin:auto 0;}&.ant-card-bordered{border:0;}.ant-card-body{padding:0;position:relative;}",
                    ],
                  },
                  "displayName": "StyledCard__UserCard",
                  "render": [Function],
                  "styledComponentId": "StyledCard__UserCard-wvdxvl-3",
                  "target": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "CodeViewPage__CodeHeader-sc-1xro4au-2",
                "isStatic": true,
                "rules": Array [
                  "
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    flex-wrap: wrap;
    min-width: auto;
    width: auto;
    min-height: auto;
    height: auto;
    ;
  ",
                  ";justify-content:space-between;padding:0 0 2rem;",
                ],
              },
              "displayName": "CodeViewPage__CodeHeader",
              "render": [Function],
              "styledComponentId": "CodeViewPage__CodeHeader-sc-1xro4au-2",
              "target": "header",
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  Copy URL
                </ForwardRef>,
                <ForwardRef>
                  Visit git
                </ForwardRef>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Copy URL",
                },
                "ref": null,
                "rendered": "Copy URL",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Group": [Function],
                  "__ANT_BUTTON": true,
                  "attrs": undefined,
                  "componentStyle": ComponentStyle {
                    "componentId": "StyledButton__LineButton-rhr4ab-7",
                    "isStatic": false,
                    "rules": Array [
                      "&.ant-btn{display:inline-flex;justify-content:center;align-items:center;line-height:1;background-color:transparent;color:",
                      [Function],
                      ";&:hover,&:focus,&:active{background-color:transparent;}i{display:inherit;align-items:inherit;justify-content:inherit;}}",
                      "&.ant-btn{border-radius:4px;}",
                      "&.ant-btn{padding:6px 10px;height:30px;background-color:",
                      [Function],
                      ";border-color:",
                      [Function],
                      ";right:20px;&:hover{background-color:",
                      [Function],
                      ";}}",
                    ],
                  },
                  "displayName": "StyledButton__LineButton",
                  "render": [Function],
                  "styledComponentId": "StyledButton__LineButton-rhr4ab-7",
                  "target": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Visit git",
                },
                "ref": null,
                "rendered": "Visit git",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Group": [Function],
                  "__ANT_BUTTON": true,
                  "attrs": undefined,
                  "componentStyle": ComponentStyle {
                    "componentId": "StyledButton__LineButton-rhr4ab-7",
                    "isStatic": false,
                    "rules": Array [
                      "&.ant-btn{display:inline-flex;justify-content:center;align-items:center;line-height:1;background-color:transparent;color:",
                      [Function],
                      ";&:hover,&:focus,&:active{background-color:transparent;}i{display:inherit;align-items:inherit;justify-content:inherit;}}",
                      "&.ant-btn{border-radius:4px;}",
                      "&.ant-btn{padding:6px 10px;height:30px;background-color:",
                      [Function],
                      ";border-color:",
                      [Function],
                      ";right:20px;&:hover{background-color:",
                      [Function],
                      ";}}",
                    ],
                  },
                  "displayName": "StyledButton__LineButton",
                  "render": [Function],
                  "styledComponentId": "StyledButton__LineButton-rhr4ab-7",
                  "target": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "CodeViewPage__ButtonWrap-sc-1xro4au-3",
                "isStatic": true,
                "rules": Array [
                  "
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    flex-wrap: wrap;
    min-width: auto;
    width: auto;
    min-height: auto;
    height: auto;
    ;
  ",
                  ";padding:2rem 0 0;",
                ],
              },
              "displayName": "CodeViewPage__ButtonWrap",
              "render": [Function],
              "styledComponentId": "CodeViewPage__ButtonWrap-sc-1xro4au-3",
              "target": "div",
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "CodeViewPage__CodeContainer-sc-1xro4au-1",
            "isStatic": true,
            "rules": Array [
              "width:100%;max-width:1200px;margin:0 auto;",
              "max-width:770px;",
            ],
          },
          "displayName": "CodeViewPage__CodeContainer",
          "render": [Function],
          "styledComponentId": "CodeViewPage__CodeContainer-sc-1xro4au-1",
          "target": "div",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "StyledLayout__PageSection-sc-1ec2pa7-4",
          "isStatic": false,
          "rules": Array [
            "&{padding:5rem 0;background-color:",
            [Function],
            ";[data-center]{text-align:center;}}&[data-center]{text-align:center;}[data-subtitle]{font-size:25px;}[data-desc]{font-size:16px;}",
          ],
        },
        "displayName": "StyledLayout__PageSection",
        "render": [Function],
        "styledComponentId": "StyledLayout__PageSection-sc-1ec2pa7-4",
        "target": "section",
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "CodeViewPage__CodePageContent-sc-1xro4au-0",
        "isStatic": false,
        "rules": Array [
          "min-height:calc(100vh - 270px);position:relative;h1,h2,h3,h4,h5,h6,ul,ol,li,p,div,section,article{color:",
          [Function],
          ";}[data-title]{font-size:46px;font-weight:bold;}[data-subtitle]{font-size:24px;font-weight:500;}p{font-size:14px;font-weight:300;line-height:1.79;}",
          "[data-title]{font-size:40px;}p{font-size:12px;}",
        ],
      },
      "displayName": "CodeViewPage__CodePageContent",
      "render": [Function],
      "styledComponentId": "CodeViewPage__CodePageContent-sc-1xro4au-0",
      "target": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef>
          <ForwardRef>
            <ForwardRef>
              <div>
                <h3
                  data-title={true}
                >
                  Input Your Code Title
                </h3>
                <p>
                  Created at June 18, 2018
                </p>
              </div>
              <ForwardRef>
                <ForwardRef
                  avatar={
                    <Avatar
                      prefixCls="ant-avatar"
                      shape="circle"
                      size="default"
                      src="http://placehold.it/85x85"
                    />
                  }
                  description="Seoul / South Korea"
                  title="user name"
                />
                <ForwardRef
                  icon="github"
                >
                  githubID
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
            <inject-CodeEditor-with-appStore />
            <ForwardRef>
              <ForwardRef>
                Copy URL
              </ForwardRef>
              <ForwardRef>
                Visit git
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef>
            <ForwardRef>
              <div>
                <h3
                  data-title={true}
                >
                  Input Your Code Title
                </h3>
                <p>
                  Created at June 18, 2018
                </p>
              </div>
              <ForwardRef>
                <ForwardRef
                  avatar={
                    <Avatar
                      prefixCls="ant-avatar"
                      shape="circle"
                      size="default"
                      src="http://placehold.it/85x85"
                    />
                  }
                  description="Seoul / South Korea"
                  title="user name"
                />
                <ForwardRef
                  icon="github"
                >
                  githubID
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
            <inject-CodeEditor-with-appStore />
            <ForwardRef>
              <ForwardRef>
                Copy URL
              </ForwardRef>
              <ForwardRef>
                Visit git
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                <div>
                  <h3
                    data-title={true}
                  >
                    Input Your Code Title
                  </h3>
                  <p>
                    Created at June 18, 2018
                  </p>
                </div>
                <ForwardRef>
                  <ForwardRef
                    avatar={
                      <Avatar
                        prefixCls="ant-avatar"
                        shape="circle"
                        size="default"
                        src="http://placehold.it/85x85"
                      />
                    }
                    description="Seoul / South Korea"
                    title="user name"
                  />
                  <ForwardRef
                    icon="github"
                  >
                    githubID
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef>,
              <inject-CodeEditor-with-appStore />,
              <ForwardRef>
                <ForwardRef>
                  Copy URL
                </ForwardRef>
                <ForwardRef>
                  Visit git
                </ForwardRef>
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <div>
                    <h3
                      data-title={true}
                    >
                      Input Your Code Title
                    </h3>
                    <p>
                      Created at June 18, 2018
                    </p>
                  </div>,
                  <ForwardRef>
                    <ForwardRef
                      avatar={
                        <Avatar
                          prefixCls="ant-avatar"
                          shape="circle"
                          size="default"
                          src="http://placehold.it/85x85"
                        />
                      }
                      description="Seoul / South Korea"
                      title="user name"
                    />
                    <ForwardRef
                      icon="github"
                    >
                      githubID
                    </ForwardRef>
                  </ForwardRef>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h3
                        data-title={true}
                      >
                        Input Your Code Title
                      </h3>,
                      <p>
                        Created at June 18, 2018
                      </p>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Input Your Code Title",
                        "data-title": true,
                      },
                      "ref": null,
                      "rendered": "Input Your Code Title",
                      "type": "h3",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Created at June 18, 2018",
                      },
                      "ref": null,
                      "rendered": "Created at June 18, 2018",
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <ForwardRef
                        avatar={
                          <Avatar
                            prefixCls="ant-avatar"
                            shape="circle"
                            size="default"
                            src="http://placehold.it/85x85"
                          />
                        }
                        description="Seoul / South Korea"
                        title="user name"
                      />,
                      <ForwardRef
                        icon="github"
                      >
                        githubID
                      </ForwardRef>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "avatar": <Avatar
                          prefixCls="ant-avatar"
                          shape="circle"
                          size="default"
                          src="http://placehold.it/85x85"
                        />,
                        "description": "Seoul / South Korea",
                        "title": "user name",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": undefined,
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledCard__UserCardMeta-wvdxvl-4",
                          "isStatic": false,
                          "rules": Array [
                            ".ant-card-meta-avatar{width:85px;height:85px;padding:0;margin-right:19px;.ant-avatar{width:100%;height:100%;&:before{display:inline-block;width:0;height:100%;vertical-align:middle;content:'';}}img{display:inline-block;vertical-align:middle;width:auto;max-width:100%;max-height:100%;}}.ant-card-meta-detail{padding-top:5px;& > div:not(:last-child){margin-bottom:2px;}}.ant-card-meta-title{color:",
                            [Function],
                            ";font-size:14px;line-height:21px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}.ant-card-meta-description{color:",
                            [Function],
                            ";font-size:12px;line-height:21px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}",
                          ],
                        },
                        "displayName": "StyledCard__UserCardMeta",
                        "render": [Function],
                        "styledComponentId": "StyledCard__UserCardMeta-wvdxvl-4",
                        "target": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                        Symbol(Symbol.hasInstance): [Function],
                      },
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "githubID",
                        "icon": "github",
                      },
                      "ref": null,
                      "rendered": "githubID",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Group": [Function],
                        "__ANT_BUTTON": true,
                        "attrs": undefined,
                        "componentStyle": ComponentStyle {
                          "componentId": "CodeViewPage__UserGithubButton-sc-1xro4au-4",
                          "isStatic": false,
                          "rules": Array [
                            "&.ant-btn{display:inline-flex;justify-content:center;align-items:center;line-height:1;background-color:transparent;color:",
                            [Function],
                            ";&:hover,&:focus,&:active{background-color:transparent;}i{display:inherit;align-items:inherit;justify-content:inherit;}}",
                            "&.ant-btn{border-radius:4px;}",
                            "&.ant-btn{padding:0 8px;margin-right:5px;border:1px solid;height:27px;line-height:25px;i{font-size:17px;color:",
                            [Function],
                            ";}span{font-size:14px;color:",
                            [Function],
                            ";}}",
                            "&.ant-btn{position:absolute;left:100px;bottom:8px;border:0;}",
                          ],
                        },
                        "displayName": "CodeViewPage__UserGithubButton",
                        "render": [Function],
                        "styledComponentId": "CodeViewPage__UserGithubButton-sc-1xro4au-4",
                        "target": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                        Symbol(Symbol.hasInstance): [Function],
                      },
                    },
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Grid": [Function],
                    "Meta": [Function],
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "StyledCard__UserCard-wvdxvl-3",
                      "isStatic": true,
                      "rules": Array [
                        "&.ant-card{background-color:transparent;max-width:225px;width:100%;height:85px;margin:auto 0;}&.ant-card-bordered{border:0;}.ant-card-body{padding:0;position:relative;}",
                      ],
                    },
                    "displayName": "StyledCard__UserCard",
                    "render": [Function],
                    "styledComponentId": "StyledCard__UserCard-wvdxvl-3",
                    "target": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "CodeViewPage__CodeHeader-sc-1xro4au-2",
                  "isStatic": true,
                  "rules": Array [
                    "
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    flex-wrap: wrap;
    min-width: auto;
    width: auto;
    min-height: auto;
    height: auto;
    ;
  ",
                    ";justify-content:space-between;padding:0 0 2rem;",
                  ],
                },
                "displayName": "CodeViewPage__CodeHeader",
                "render": [Function],
                "styledComponentId": "CodeViewPage__CodeHeader-sc-1xro4au-2",
                "target": "header",
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef>
                    Copy URL
                  </ForwardRef>,
                  <ForwardRef>
                    Visit git
                  </ForwardRef>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Copy URL",
                  },
                  "ref": null,
                  "rendered": "Copy URL",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Group": [Function],
                    "__ANT_BUTTON": true,
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "StyledButton__LineButton-rhr4ab-7",
                      "isStatic": false,
                      "rules": Array [
                        "&.ant-btn{display:inline-flex;justify-content:center;align-items:center;line-height:1;background-color:transparent;color:",
                        [Function],
                        ";&:hover,&:focus,&:active{background-color:transparent;}i{display:inherit;align-items:inherit;justify-content:inherit;}}",
                        "&.ant-btn{border-radius:4px;}",
                        "&.ant-btn{padding:6px 10px;height:30px;background-color:",
                        [Function],
                        ";border-color:",
                        [Function],
                        ";right:20px;&:hover{background-color:",
                        [Function],
                        ";}}",
                      ],
                    },
                    "displayName": "StyledButton__LineButton",
                    "render": [Function],
                    "styledComponentId": "StyledButton__LineButton-rhr4ab-7",
                    "target": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Visit git",
                  },
                  "ref": null,
                  "rendered": "Visit git",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Group": [Function],
                    "__ANT_BUTTON": true,
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "StyledButton__LineButton-rhr4ab-7",
                      "isStatic": false,
                      "rules": Array [
                        "&.ant-btn{display:inline-flex;justify-content:center;align-items:center;line-height:1;background-color:transparent;color:",
                        [Function],
                        ";&:hover,&:focus,&:active{background-color:transparent;}i{display:inherit;align-items:inherit;justify-content:inherit;}}",
                        "&.ant-btn{border-radius:4px;}",
                        "&.ant-btn{padding:6px 10px;height:30px;background-color:",
                        [Function],
                        ";border-color:",
                        [Function],
                        ";right:20px;&:hover{background-color:",
                        [Function],
                        ";}}",
                      ],
                    },
                    "displayName": "StyledButton__LineButton",
                    "render": [Function],
                    "styledComponentId": "StyledButton__LineButton-rhr4ab-7",
                    "target": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "CodeViewPage__ButtonWrap-sc-1xro4au-3",
                  "isStatic": true,
                  "rules": Array [
                    "
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    flex-wrap: wrap;
    min-width: auto;
    width: auto;
    min-height: auto;
    height: auto;
    ;
  ",
                    ";padding:2rem 0 0;",
                  ],
                },
                "displayName": "CodeViewPage__ButtonWrap",
                "render": [Function],
                "styledComponentId": "CodeViewPage__ButtonWrap-sc-1xro4au-3",
                "target": "div",
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "CodeViewPage__CodeContainer-sc-1xro4au-1",
              "isStatic": true,
              "rules": Array [
                "width:100%;max-width:1200px;margin:0 auto;",
                "max-width:770px;",
              ],
            },
            "displayName": "CodeViewPage__CodeContainer",
            "render": [Function],
            "styledComponentId": "CodeViewPage__CodeContainer-sc-1xro4au-1",
            "target": "div",
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "StyledLayout__PageSection-sc-1ec2pa7-4",
            "isStatic": false,
            "rules": Array [
              "&{padding:5rem 0;background-color:",
              [Function],
              ";[data-center]{text-align:center;}}&[data-center]{text-align:center;}[data-subtitle]{font-size:25px;}[data-desc]{font-size:16px;}",
            ],
          },
          "displayName": "StyledLayout__PageSection",
          "render": [Function],
          "styledComponentId": "StyledLayout__PageSection-sc-1ec2pa7-4",
          "target": "section",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "CodeViewPage__CodePageContent-sc-1xro4au-0",
          "isStatic": false,
          "rules": Array [
            "min-height:calc(100vh - 270px);position:relative;h1,h2,h3,h4,h5,h6,ul,ol,li,p,div,section,article{color:",
            [Function],
            ";}[data-title]{font-size:46px;font-weight:bold;}[data-subtitle]{font-size:24px;font-weight:500;}p{font-size:14px;font-weight:300;line-height:1.79;}",
            "[data-title]{font-size:40px;}p{font-size:12px;}",
          ],
        },
        "displayName": "CodeViewPage__CodePageContent",
        "render": [Function],
        "styledComponentId": "CodeViewPage__CodePageContent-sc-1xro4au-0",
        "target": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
